USE [CPSIntranet_Beta]
GO
/****** Object:  StoredProcedure [dbo].[RotaidandDraftnoSubmit]    Script Date: 15-07-2024 17:08:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EXEC [dbo].[TMS_spGetTimesheetListforUnSubmittedStatus]

--WARNING! ERRORS ENCOUNTERED DURING SQL PARSING!  
--exec RotaidandDraftnoSubmit   
CREATE PROCEDURE [dbo].[TMS_spGetTimesheetUnSubmittedStatus]
(
	@OrderBy varchar(1000), 
	@StartRow int, 
	@EndRow int,
	
	@EmployeeName nvarchar(100),
	@TimesheetDate nvarchar(10),
	@ProjectName nvarchar(100),
	@PracticeName nvarchar(100),
	
	@TotalHours nvarchar(10),
	@TotalMins nvarchar(20),
	@Rate nvarchar(5),
	@TotalRate nvarchar(10),
	
	@RateTypeId nvarchar(10),
	@WorkTypeId nvarchar(10),
	@Status nvarchar(50),
	@FromDate nvarchar(10),
	@ToDate nvarchar(10),
	@TimesheetStatusId nvarchar(10),
	@AuthoriserName nvarchar(100),
	@AuthorisedDate nvarchar(20),
	
	@CreatedDate nvarchar(20),
	@SubmittedDate nvarchar(20),
	
	@EmployeeId nvarchar(10),
	
	@ViewerId int,
	@ForEmployee bit = 0,
	@mystaff bit = 0,
	@TotalCount int out
)
As     
BEGIN
WITH ListDates (AllDates) AS (  SELECT convert(DATETIME, '01/01/2024', 103) AS DATE  
UNION ALL  SELECT DATEADD(DAY, 1, AllDates)  FROM ListDates  WHERE AllDates < convert(DATETIME, '30/07/2024', 103) )  
  
SELECT AllDates  
INTO #ListDate  
FROM ListDates  
OPTION (MAXRECURSION 1000)  
  
SELECT   
a1.AllDates,a1.TimesheetId,b1.EmployeeId,b1.rotaid,a1.TimesheetDate,a1.ProjectId,
a1.TimesheetStatusId,a1.TotalHours,a1.AdditionalHours,a1.TotalMins,a1.Rate,
a1.TotalRate,a1.RotaDate,a1.RotaPracticeName,a1.RotaShiftTime,
a1.RotaAdditionalHours,a1.RotaHoursType,a1.RotaTotalHours,	
a1.RotaTotalMins,a1.isTimesheetSubmitted,a1.RateTypeId,
a1.WorkTypeId,a1.PracticeId,a1.AuthoriserName,
a1.AuthorisedDate,a1.STATUS,a1.ProjectName,
PracticeName,
EmployeeName,
Comment,
WorkType,	
RateType,
CreatedDate,
SubmittedDate,
TROR


FROM (  
 SELECT LD.AllDates  
  ,t1.TimesheetId  
  ,t1.EmployeeId  
  ,t1.TimesheetDate  
  ,t1.ProjectId  
  ,t1.TimesheetStatusId  
  ,CASE   
   WHEN ISNULL(t1.IsAdditionalHours, 0) = 0  
    THEN ISNULL(t1.TotalHours, 0)  
   ELSE 0  
   END TotalHours  
  ,CASE   
   WHEN ISNULL(t1.IsAdditionalHours, 0) = 1  
    THEN ISNULL(t1.TotalHours, 0)  
   ELSE 0  
   END AdditionalHours  
  ,isnull(t1.TotalMins, 0) TotalMins  
  ,isnull(t1.Rate, 0) Rate  
  ,isnull(t1.TotalRate, 0) TotalRate  
  ,R.RotaDate  
  ,ISNULL(t5.PracticeName, '') RotaPracticeName  
  ,R.ShiftTime RotaShiftTime  
  ,R.AdditionalHours RotaAdditionalHours  
  ,R.HoursType RotaHoursType  
  ,R.TotalHours as RotaTotalHours  
  ,R.TotalMins RotaTotalMins  
  ,CASE   
   WHEN t1.TimesheetId IS NOT NULL  
    AND t1.TimesheetStatusId = 1  
    THEN 1  
   ELSE 0  
   END isTimesheetSubmitted  
  ,isnull(t1.RateTypeId, 0) RateTypeId  
  ,isnull(t1.WorkTypeId, 0) WorkTypeId  
  ,isnull(t1.PracticeId, 0) PracticeId  
  ,t1.AuthoriserName  
  ,t1.AuthorisedDate  
  ,t2.STATUS  
  ,t3.ProjectName  
  ,isnull(t4.PracticeName, '') PracticeName  
  ,(t6.FirstName + ' ' + t6.LastName) AS EmployeeName  
  ,t1.Comment  
  ,WorkType = CASE t1.WorkTypeId  
   WHEN 1  
    THEN 'Locums Contractor'  
   WHEN 2  
    THEN 'Inter Company'  
   ELSE 'Paye'  
   END  
  ,RateType = CASE t1.RateTypeId  
   WHEN 1  
    THEN 'Per Day'  
   WHEN 2  
    THEN 'Per Hour'  
   ELSE ''  
   END  
  ,t1.CreatedDate AS CreatedDate  
  ,t1.SUBMITTEDDATE AS SubmittedDate  
  ,NULL AS TROR FROM #ListDate LD  
 LEFT JOIN dbo.TMS_Timesheets AS t1 with(nolock) ON LD.AllDates = t1.TimesheetDate  
 LEFT JOIN dbo.TMS_TimesheetStatuses AS t2 with(nolock)ON t1.TimesheetStatusId = t2.StatusId  
 LEFT JOIN dbo.TMS_Projects AS t3 with(nolock)ON t1.ProjectId = t3.ProjectId  
 LEFT JOIN dbo.RotaDetails AS r with(nolock)ON LD.AllDates = r.RotaDate  
  AND (  
   r.EmployeeId = t1.EmployeeId  
   OR t1.TimesheetDate != NULL  
   )  
  AND (  
   r.PracticeId = t1.PracticeId  
   OR t1.TimesheetDate != NULL  
   )  
 LEFT JOIN dbo.TMS_Practices AS t4 with(nolock)ON t1.PracticeId = t4.PracticeId  
 LEFT JOIN dbo.TMS_Practices AS t5 with(nolock) ON r.PracticeId = t5.PracticeId  
 LEFT JOIN dbo.Employees AS t6 ON ISNULL(t1.EmployeeId, r.EmployeeId) = t6.EmployeeId  
 WHERE 1 = 1  
  AND t6.EmployeeId IS NOT NULL  
  AND (  
   t1.AuthoriserId = 1  
   OR t1.AuthoriserId IS NULL  
   )  
  AND LD.AllDates >= convert(DATETIME, '01/01/2024', 103)  
  AND LD.AllDates <= convert(DATETIME, '30/07/2024', 103)  
  AND convert(VARCHAR, isnull(t1.TimesheetStatusId, '1')) = '6'  
 ) AS a1  
RIGHT OUTER JOIN (  
 SELECT t6.EmployeeId  
  ,t1.TimesheetId  
  ,max(r.RotaId) AS RotaId  
  ,t2.STATUS  
 FROM dbo.Employees t6  with(nolock)
 LEFT JOIN dbo.rotadetails r with(nolock)ON t6.EmployeeId = r.EmployeeId  
 LEFT JOIN dbo.Tms_Timesheets t1 with(nolock)ON r.EmployeeId = t1.EmployeeId  
  AND r.PracticeId = t1.PracticeId  
 LEFT JOIN dbo.TMS_TimesheetStatuses t2 with(nolock) ON t2.StatusId = t1.TimesheetStatusId  
 WHERE Rotaid IS NOT null  
  AND t1.TimesheetId IS NULL  
  OR TimesheetStatusId = 6  
 GROUP BY t6.EmployeeId  
  ,t1.TimesheetId  
  ,t2.STATUS  
 ) AS b1 ON a1.EmployeeId = b1.EmployeeId
 set nocount off;

 END
 
CONVERT ABOVE SP into below SP format 
 
ALTER PROCEDURE [dbo].[TMS_spGetTimesheetListStatusWise]
(
	@OrderBy varchar(1000), 
	@StartRow int, 
	@EndRow int,
	
	@EmployeeName nvarchar(100),
	@TimesheetDate nvarchar(10),
	@ProjectName nvarchar(100),
	@PracticeName nvarchar(100),
	
	@TotalHours nvarchar(10),
	@TotalMins nvarchar(20),
	@Rate nvarchar(5),
	@TotalRate nvarchar(10),
	
	@RateTypeId nvarchar(10),
	@WorkTypeId nvarchar(10),
	@Status nvarchar(50),
	@FromDate nvarchar(10),
	@ToDate nvarchar(10),
	@TimesheetStatusId nvarchar(10),
	@AuthoriserName nvarchar(100),
	@AuthorisedDate nvarchar(20),
	
	@CreatedDate nvarchar(20),
	@SubmittedDate nvarchar(20),
	
	@EmployeeId nvarchar(10),
	
	@ViewerId int,
	@ForEmployee bit = 0,
	@mystaff bit = 0,
	@TotalCount int out
)
As     
BEGIN

	SET NOCOUNT ON;
	declare @IsLineManager bit;
	declare @IsFinanceController bit;
	declare @IsAdmin bit;
	declare @SELECT varchar(8000);
	declare @ColList varchar(8000);
	declare @Where varchar(8000);
	declare @i int; 
	declare @i2 int;
	declare @tmp varchar(8000);
	declare @dec varchar(8000);
	declare @f varchar(8000);
	declare @d varchar(8000);
	declare @Symbol char(2);
	declare @SQL varchar(8000);
	declare @Sort varchar(8000);
	declare @strLen int;
	declare @rolename nvarchar(500);

--SELECT 
	--	@IsAdmin = CASE WHEN R.RoleName='Admin' THEN 1 ELSE 0 END 
	--FROM Employees AS E 
	--	LEFT JOIN Roles AS R ON R.RoleId = E.RoleId 
	--WHERE E.EmployeeId= @ViewerId
SET @IsAdmin = 0
	SELECT @IsLineManager=ISNULL(IsLineManager,0), @IsFinanceController=ISNULL(IsFinanceController,0), @rolename = R.RoleName FROM Employees 
	LEFT JOIN Roles AS R ON R.RoleId = Employees.RoleId 
	WHERE EmployeeId = @ViewerId
	
	IF (@IsFinanceController = 1 OR @rolename ='Basic Admin')
	BEGIN
		SET @IsAdmin = 1
	END
	

	set @SELECT = 'SELECT   '	
	set @SELECT = @SELECT + ' 	t1.TimesheetId,'
	set @SELECT = @SELECT + ' 	t1.EmployeeId,'
	set @SELECT = @SELECT + ' 	t1.TimesheetDate,'	
	set @SELECT = @SELECT + ' 	t1.ProjectId,'	
	set @SELECT = @SELECT + ' 	t1.TimesheetStatusId,'	
	set @SELECT = @SELECT + ' 	isnull(t1.TotalHours,0) TotalHours,'
	set @SELECT = @SELECT + ' 	isnull(t1.TotalMins,0) TotalMins,'
	set @SELECT = @SELECT + ' 	isnull(t1.Rate,0) Rate,'
	set @SELECT = @SELECT + ' 	isnull(t1.TotalRate,0) TotalRate,'
	set @SELECT = @SELECT + ' 	isnull(t1.RateTypeId,0) RateTypeId,'
	set @SELECT = @SELECT + ' 	isnull(t1.WorkTypeId,0) WorkTypeId,'
	set @SELECT = @SELECT + ' 	isnull(t1.PracticeId,0) PracticeId,'
	set @SELECT = @SELECT + ' 	t1.AuthoriserName,'	
	set @SELECT = @SELECT + ' 	t1.AuthorisedDate,'	
	set @SELECT = @SELECT + ' 	t6.ClinicianTypeId,'	
	set @SELECT = @SELECT + ' 	isnull(t6.Typeofclient,'''') Typeofclient, '

	set @SELECT = @SELECT + ' 	t2.Status,'
	set @SELECT = @SELECT + ' 	t3.ProjectName, '
	set @SELECT = @SELECT + ' 	isnull(t4.PracticeName,'''') PracticeName, '
	set @SELECT = @SELECT + ' 	(t6.FirstName + '' '' + t6.LastName) AS EmployeeName, '	
	set @SELECT = @SELECT + ' 	t1.Comment,'	
	
	set @SELECT = @SELECT + '	WorkType=case t1.WorkTypeId when 1 then ''Locums Contractor'' when 2 then ''Inter Company'' else ''Paye'' end,'
	set @SELECT = @SELECT + '	RateType=case t1.RateTypeId when 1 then ''Per Day''  when 2 then ''Per Hour'' else '''' end,'
	
	set @SELECT = @SELECT + ' 	isnull(t3.ProjectCode,'''') ProjectCode, ' -- Client Xero Code
	set @SELECT = @SELECT + ' 	isnull(pc.ProjectCategory,'''') ProjectCategory, ' -- Service Code
	set @SELECT = @SELECT + ' 	isnull(t6.ContractorCode,'''') ContractorCode, ' -- Staff Xero Code

	set @SELECT = @SELECT + ' 	t1.CreatedDate AS CreatedDate, '
	set @SELECT = @SELECT + ' 	t1.SUBMITTEDDATE AS SubmittedDate '
	
	set @SELECT = @SELECT + ' 	FROM TMS_Timesheets AS t1 '
	set @SELECT = @SELECT + ' 	INNER JOIN TMS_TimesheetStatuses AS t2 ON t1.TimesheetStatusId=t2.StatusId'
	set @SELECT = @SELECT + ' 	INNER JOIN TMS_Projects AS t3 ON t1.ProjectId=t3.ProjectId'
	set @SELECT = @SELECT + ' 	LEFT JOIN TMS_Practices AS t4 ON t1.PracticeId= t4.PracticeId'
	set @SELECT = @SELECT + ' 	INNER JOIN Employees AS t6 ON t1.EmployeeId=t6.EmployeeId'
	set @SELECT = @SELECT + ' 	LEFT JOIN ProjectCategoryTypes AS pc on t3.ProjectCategoryId = pc.ProjectCategoryTypeID'
	set @SELECT = @SELECT + '   LEFT JOIN LeaveDetails AS ld ON t1.EmployeeId = ld.CreatedBy AND CAST(t1.TimesheetDate AS DATE) BETWEEN CAST(ld.FromDate AS DATE) AND CAST(ld.ToDate AS DATE)' -- Vijay 14

	
	-- set @SELECT = @SELECT + ' 	WHERE 1=1'
	--set @SELECT = @SELECT + ' WHERE ld.LeaveId IS NULL AND 1=1' 
	set @SELECT = @SELECT + ' WHERE ld.LeaveId IS NULL AND 1=1'		 -- Vijay 14
	if @IsAdmin <> 1
	begin
		print 'patel'
		set @SELECT = @SELECT + ' and t1.AuthoriserId ='+ convert(varchar,@ViewerId) + ''
		--if @IsLineManager = 1
		--begin
		--	set @SELECT = @SELECT + ' and t6.LineManagerId='+ convert(varchar,@ViewerId) + ''
		--end
	end
	else if @mystaff = 1
	begin
		print 'dev'
		set @SELECT = @SELECT + ' and t1.AuthoriserId ='+ convert(varchar,@ViewerId) + ''
	end

	if @AuthoriserName<>''
	begin
		set @SELECT = @SELECT + ' and isnull(t1.AuthoriserName,'''') like ''%'+ convert(varchar,@AuthoriserName) +'%'' '
	end 
	if @AuthorisedDate<>''
	begin
		set @SELECT = @SELECT + ' and convert(varchar(10), t1.AuthorisedDate,103)  like ''%'+ convert(varchar,@AuthorisedDate) +'%'' '
	end 
	if @EmployeeName<>''
	begin
		set @SELECT = @SELECT + ' and (RTRIM(LTRIM(t6.FirstName)) + '' '' + RTRIM(LTRIM(t6.LastName)) like ''%'+ convert(varchar,@EmployeeName) +'%'')'
	end

	if @TimesheetDate<>''
	begin
		set @SELECT = @SELECT + ' and isnull(t1.TimesheetDate,'''') like ''%'+ convert(varchar,@TimesheetDate) +'%'' '
	end 
	if @ProjectName<>''
	begin
		set @SELECT = @SELECT + ' and isnull(t3.ProjectName,'''') like ''%'+ convert(varchar,@ProjectName) +'%'' '
	end 
	if @PracticeName<>''
	begin
		set @SELECT = @SELECT + ' and isnull(t4.PracticeName,'''') like ''%'+ convert(varchar,@PracticeName) +'%'' '
	end 
		
	if @TotalHours<>''
	begin
		set @SELECT = @SELECT + ' and convert(varchar, isnull(t1.TotalHours,''0'')) like ''%'+ convert(varchar,@TotalHours) +'%'' '
	end 
	if @TotalMins<>''
	begin
		set @SELECT = @SELECT + ' and convert(varchar, isnull(t1.TotalMins,''0'')) like ''%'+ convert(varchar,@TotalMins) +'%'' '
	end 
		if @Rate<>''
	begin
		set @SELECT = @SELECT + ' and convert(varchar, isnull(t1.Rate,''0'')) like ''%'+ convert(varchar,@Rate) +'%'' '
	end 
	if @TotalRate<>''
	begin
		set @SELECT = @SELECT + ' and convert(varchar, isnull(t1.TotalRate,''0'')) like ''%'+ convert(varchar,@TotalRate) +'%'' '
	end 

	if @FromDate<>''
	begin
		set @SELECT = @SELECT + ' and t1.TimesheetDate >= convert(datetime,'''+ @FromDate  + ''',103) '
	end 
	if @ToDate<>''
	begin
		--set @SELECT = @SELECT + ' and t1.TimesheetDate <='''+ convert(varchar(10),@ToDate,103) +''' '
		set @SELECT = @SELECT + ' and t1.TimesheetDate <= convert(datetime,'''+ @ToDate  + ''',103) '
	end 
	if @RateTypeId<>''
	begin
		set @SELECT = @SELECT + ' and convert(varchar, isnull(t1.RateTypeId,''0'')) ='''+ convert(varchar,@RateTypeId) +''' '
	end 
	if @WorkTypeId<>'0'
	begin
		set @SELECT = @SELECT + ' and convert(varchar, isnull(t1.WorkTypeId,''0'')) ='''+ convert(varchar,@WorkTypeId) +''' '
	end 
	if @Status<>''
	begin
		set @SELECT = @SELECT + ' and isnull(t2.Status,'''') like ''%'+ convert(varchar,@Status) +'%'' '
	end 

	if @TimesheetStatusId<>'0'
	begin
		set @SELECT = @SELECT + ' and convert(varchar, isnull(t1.TimesheetStatusId,''0'')) ='''+ convert(varchar,@TimesheetStatusId) +''' '
	end 
	else
	begin
		if @ForEmployee = 0
		begin
		set @SELECT = @SELECT + ' and convert(varchar, isnull(t1.TimesheetStatusId,''0''))<>6 '
		end
	end
	
	if @CreatedDate<>''
	begin		
		set @SELECT = @SELECT + ' and convert(varchar(10), t1.CreatedDate,103)  like ''%'+ convert(varchar,@CreatedDate) +'%'' '
	end 
	
	if @SubmittedDate <>''
	begin		
		set @SELECT = @SELECT + ' and convert(varchar(10), t1.SubmittedDate,103)  like ''%'+ convert(varchar,@SubmittedDate) +'%'' '
	end 
	
	if @SubmittedDate <>''
	begin		
		set @SELECT = @SELECT + ' and convert(varchar(10), t1.SubmittedDate,103)  like ''%'+ convert(varchar,@SubmittedDate) +'%'' '
	end 
	if @EmployeeId <>''
	begin		
		set @SELECT = @SELECT + ' and t1.EmployeeId = ' + convert(varchar,@EmployeeId) + ' '			
	end 
