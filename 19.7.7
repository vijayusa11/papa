Your provided code is close, but there are a few adjustments necessary to handle the CSV parsing correctly and ensure the proper data is extracted and inserted into the database. Hereâ€™s the updated method with corrections:

```csharp
private void InsertIntoDatabase(string csvFilePath)
{
    try
    {
        using (var connection = new SqlConnection(ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString))
        {
            connection.Open();

            string insertQuery = @"INSERT INTO OutputFileDetails (Date, Agent, TimesheetOwner, TotalTalkingTime)
                                   VALUES (@Date, @Agent, @TimesheetOwner, @TotalTalkingTime)";

            using (var insertCommand = new SqlCommand(insertQuery, connection))
            {
                using (var reader = new StreamReader(csvFilePath))
                {
                    // Skip the first 6 lines of metadata
                    for (int i = 0; i < 6; i++)
                    {
                        reader.ReadLine();
                    }

                    // Read the header row
                    reader.ReadLine();

                    while (!reader.EndOfStream)
                    {
                        var line = reader.ReadLine();
                        var values = line.Split('\t');

                        if (values.Length < 8)
                        {
                            continue;
                        }

                        var agentExtension = values[0].Trim();
                        var timesheetOwner = values[1].Trim();
                        var totalTalkingTime = values[7].Trim();

                        // Insert only if agentExtension and timesheetOwner are not empty
                        if (!string.IsNullOrEmpty(agentExtension) && !string.IsNullOrEmpty(timesheetOwner))
                        {
                            insertCommand.Parameters.Clear();
                            insertCommand.Parameters.AddWithValue("@Date", DateTime.Today);
                            insertCommand.Parameters.AddWithValue("@Agent", agentExtension);
                            insertCommand.Parameters.AddWithValue("@TimesheetOwner", timesheetOwner);
                            insertCommand.Parameters.AddWithValue("@TotalTalkingTime", totalTalkingTime);

                            insertCommand.ExecuteNonQuery();
                        }
                    }
                }
            }
        }
    }
    catch (Exception ex)
    {
        LogToErrorFile(ex.Message);
        StartConsoleWriting(ex.Message);
    }
}
```

**Key Changes:**
1. **Reader Check:** Changed `!reader.EndOfData` to `!reader.EndOfStream` to properly handle the end of the CSV file.
2. **Value Check:** Added a check to ensure `agentExtension` and `timesheetOwner` are not empty before attempting to insert them into the database.
3. **Trim Values:** Trimmed all values extracted from the CSV to remove any leading or trailing spaces.

You can call this method with the path to your CSV file as follows:

```csharp
InsertIntoDatabase("path_to_your_csv_file.csv");
```

Make sure your connection string and table schema are correctly configured to match the data being inserted. If you have any further requirements or issues, feel free to ask!